<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Holmesisme</title>
  
  <subtitle>Holmesisme&#39;s Blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://holmesisme.github.io/"/>
  <updated>2019-08-23T07:24:40.184Z</updated>
  <id>http://holmesisme.github.io/</id>
  
  <author>
    <name>[object Object]</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>spring独立应用程序获取bean</title>
    <link href="http://holmesisme.github.io/2019/08/23/spring%E7%8B%AC%E7%AB%8B%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E8%8E%B7%E5%8F%96bean/"/>
    <id>http://holmesisme.github.io/2019/08/23/spring独立应用程序获取bean/</id>
    <published>2019-08-23T06:27:58.000Z</published>
    <updated>2019-08-23T07:24:40.184Z</updated>
    
    <content type="html"><![CDATA[<p>当你需要单独使用项目中的某些bean来操作数据(如对文本进行读取写入数据等)，这时可以在项目中编写一个独立的应用程序来完成这些操作而无需启动项目，下面我们来看看如何在独立应用程序中获取项目中的bean</p><h3 id="一、使用XML配置文件中配置bean"><a href="#一、使用XML配置文件中配置bean" class="headerlink" title="一、使用XML配置文件中配置bean"></a>一、使用XML配置文件中配置bean</h3><h5 id="接口类"><a href="#接口类" class="headerlink" title="接口类"></a>接口类</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao2</span> </span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">long</span> <span class="title">getUserCount</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="实现类"><a href="#实现类" class="headerlink" title="实现类"></a>实现类</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title">UserDao2</span></span>&#123;</span><br><span class="line">    JdbcTemplate jdbcTemplate; </span><br><span class="line"><span class="comment">//set注入JdbcTemplate</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setJdbcTemplate</span><span class="params">(JdbcTemplate jdbcTemplate)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.jdbcTemplate = jdbcTemplate;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">getUserCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String sql = <span class="string">"select count(*) from food_user"</span>;</span><br><span class="line">        <span class="keyword">long</span> count = jdbcTemplate.queryForObject(sql,<span class="keyword">long</span>.class);</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="数据库配置信息db-properties"><a href="#数据库配置信息db-properties" class="headerlink" title="数据库配置信息db.properties"></a>数据库配置信息db.properties</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">jdbc.user=root</span><br><span class="line">jdbc.password=holmesisme</span><br><span class="line">jdbc.driverClassName=com.mysql.jdbc.Driver</span><br><span class="line">jdbc.url=jdbc:mysql:<span class="comment">//localhost:3306/vueproject?serverTimezone=GMT</span></span><br></pre></td></tr></table></figure><h5 id="配置文件application-xml"><a href="#配置文件application-xml" class="headerlink" title="配置文件application.xml"></a>配置文件application.xml</h5><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--  读取db.properties中的数据库配置信息  --&gt;</span><br><span class="line">&lt;context:property-placeholder location=<span class="string">"classpath:db.properties"</span>/&gt;</span><br><span class="line">&lt;!--  配置一个数据源  --&gt;</span><br><span class="line">&lt;bean id=<span class="string">"dataSource"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"org.apache.commons.dbcp.BasicDataSource"</span>&gt;</span><br><span class="line">    &lt;property name="url" value="$&#123;jdbc.url&#125;"&gt;&lt;/property&gt;</span><br><span class="line">    &lt;property name="driverClassName" value="$&#123;jdbc.driverClassName&#125;"&gt;&lt;/property&gt;</span><br><span class="line">    &lt;property name="username" value="$&#123;jdbc.user&#125;"&gt;&lt;/property&gt;</span><br><span class="line">    &lt;property name="password" value="$&#123;jdbc.password&#125;"&gt;&lt;/property&gt;</span><br><span class="line">&lt;/bean&gt;</span><br><span class="line">&lt;!--  配置一个JdbcTemplate实例，并注入dataSource数据源  --&gt;</span><br><span class="line">&lt;bean id=<span class="string">"jdbcTemplate"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"org.springframework.jdbc.core.JdbcTemplate"</span>&gt;</span><br><span class="line">    &lt;constructor-arg name=<span class="string">"dataSource"</span> ref=<span class="string">"dataSource"</span>/&gt;</span><br><span class="line">&lt;/bean&gt;</span><br><span class="line">&lt;bean id=<span class="string">"userDaoImpl"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"com.walsh.vuespringboot.dao.UserDaoImpl"</span>&gt;</span><br><span class="line">    &lt;property name=<span class="string">"jdbcTemplate"</span> ref=<span class="string">"jdbcTemplate"</span>/&gt;</span><br><span class="line">&lt;/bean&gt;</span><br></pre></td></tr></table></figure><h5 id="主函数"><a href="#主函数" class="headerlink" title="主函数"></a>主函数</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        AbstractApplicationContext context = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"application.xml"</span>);</span><br><span class="line">        UserDaoImpl userDao = (UserDaoImpl) context.getBean(<span class="string">"userDaoImpl"</span>);</span><br><span class="line">        System.out.println(userDao.getUserCount());</span><br><span class="line">        context.stop();<span class="comment">//释放资源</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二、使用注解获取bean"><a href="#二、使用注解获取bean" class="headerlink" title="二、使用注解获取bean"></a>二、使用注解获取bean</h3><h5 id="使用jpa操作数据库"><a href="#使用jpa操作数据库" class="headerlink" title="使用jpa操作数据库"></a>使用jpa操作数据库</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> <span class="keyword">extends</span> <span class="title">JpaRepository</span>&lt;<span class="title">User</span>,<span class="title">Integer</span>&gt; </span>&#123;</span><br><span class="line">    <span class="meta">@Query</span>(<span class="string">"select count(t) from User t"</span>)</span><br><span class="line">    <span class="function">Long <span class="title">getUserCount</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="服务类"><a href="#服务类" class="headerlink" title="服务类"></a>服务类</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserService</span></span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    UserDao dao; </span><br><span class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">getUserCount</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dao.getUserCount();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">spring.datasource.url=jdbc:mysql:<span class="comment">//localhost:3306/vueproject?serverTimezone=GMT</span></span><br><span class="line">spring.datasource.username=root</span><br><span class="line">spring.datasource.password=holmesisme</span><br><span class="line">spring.datasource.driver-<span class="class"><span class="keyword">class</span>-<span class="title">name</span></span>=com.mysql.jdbc.Driver</span><br></pre></td></tr></table></figure><h5 id="主函数-1"><a href="#主函数-1" class="headerlink" title="主函数"></a>主函数</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span> </span><br><span class="line"><span class="meta">@PropertySource</span>(value = &#123;<span class="string">"classpath:application.properties"</span>&#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        AnnotationConfigApplicationContext context = <span class="keyword">new</span> AnnotationConfigApplicationContext(Test.class); </span><br><span class="line">        UserService userService = (UserService) context.getBean(<span class="string">"userService"</span>);</span><br><span class="line">        Long count = userService.getUserCount;</span><br><span class="line">        System.out.println(count);</span><br><span class="line">        context.stop();<span class="comment">//释放资源</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>使用AnnotationConfigApplicationContext可以实现基于Java的配置类加载Spring的应用上下文。避免使用application.xml进行配置。相比XML配置，更加便捷<br>@PropertySource用来加载配置文件</p></blockquote><p>@SpringBootApplication可以认为是@SpringBootConfiguration，@EnableAutoConfiguration和@ComponentScan三个注解的组合<br>所以也可以使用下面的方式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ComponentScan</span></span><br><span class="line"><span class="meta">@EnableAutoConfiguration</span> </span><br><span class="line"><span class="meta">@PropertySource</span>(value = &#123;<span class="string">"classpath:application.properties"</span>&#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        AnnotationConfigApplicationContext context = <span class="keyword">new</span> AnnotationConfigApplicationContext(Test.class); </span><br><span class="line">        UserService userService = (UserService) context.getBean(<span class="string">"userService"</span>);</span><br><span class="line">        Long count = userService.getUserCount;</span><br><span class="line">        System.out.println(count);</span><br><span class="line">        context.stop();<span class="comment">//释放资源</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="碰到的错误"><a href="#碰到的错误" class="headerlink" title="碰到的错误"></a>碰到的错误</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Failed to determine a suitable driver class</span><br></pre></td></tr></table></figure><p>可能原因：</p><ul><li>数据源配置错误</li><li>配置文件没有被加载</li></ul><p>解决</p><blockquote><p>检查配置文件<br>查看代码是否加载配置文件，独立应用程序使用@PropertySource加载配置文件</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">No qualifying bean of type &apos;xxx&apos; available: expected at least 1 bean which qualifies as autowire candidate.</span><br></pre></td></tr></table></figure><p>可能原因：</p><ul><li>从容器获取的bean中的@Autowired好像是不会自动装配</li></ul><p>解决</p><blockquote><p>使用@EnableAutoConfiguration</p></blockquote><p>取得了bean，就可以愉快的写独立应用程序了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;当你需要单独使用项目中的某些bean来操作数据(如对文本进行读取写入数据等)，这时可以在项目中编写一个独立的应用程序来完成这些操作而无需启动项目，下面我们来看看如何在独立应用程序中获取项目中的bean&lt;/p&gt;
&lt;h3 id=&quot;一、使用XML配置文件中配置bean&quot;&gt;&lt;a h
      
    
    </summary>
    
      <category term="日常学习" scheme="http://holmesisme.github.io/categories/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="spring" scheme="http://holmesisme.github.io/tags/spring/"/>
    
      <category term="独立应用程序" scheme="http://holmesisme.github.io/tags/%E7%8B%AC%E7%AB%8B%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/"/>
    
      <category term="bean" scheme="http://holmesisme.github.io/tags/bean/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://holmesisme.github.io/2019/08/23/hello-world/"/>
    <id>http://holmesisme.github.io/2019/08/23/hello-world/</id>
    <published>2019-08-23T06:23:00.000Z</published>
    <updated>2019-08-23T06:23:14.185Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
